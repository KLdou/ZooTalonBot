require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const { log } = require("../utils/helpers");
const { handleMessage, handleCallback } = require("./handlers");
let bot;
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
function createBot() {
  // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (bot) {
    try {
      bot.stopPolling();
    } catch (e) {
      log('Error while stopping previous bot:', e);
    }
  }

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
  bot = new TelegramBot(TELEGRAM_TOKEN, {
    polling: true,
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –ª—É—á—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    request: {
      timeout: 60000,
      agent: null
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  bot.on("message", (msg) => handleMessage(bot, msg));
  bot.on("callback_query", (query) => handleCallback(bot, query));

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ polling
  bot.on("polling_error", (error) => {
    log('Polling error:', error.code, error.message);
    
    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –ø—Ä–∏ —Ñ–∞—Ç–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
    if (error.code === 'EFATAL' || error.message.includes('ECONNRESET')) {
      log('Restarting bot due to fatal error...');
      setTimeout(createBot, 5000); // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    }
  });

  bot.on("webhook_error", (error) => {
    log('Webhook error:', error);
  });

  log('Bot started successfully');
}

createBot();
log("üöÄ –ë–æ—Ç –¥–ª—è zoo —Ç–∞–ª–æ–Ω–æ–≤ –∑–∞–ø—É—â–µ–Ω...");
